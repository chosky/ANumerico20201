/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Parser.MathFunctionsParser;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atabord
 */
public class Biseccion extends javax.swing.JFrame {
    private double _xi;
    private double _xs;
    private double _tolerance;
    private int _n;
    private final MathFunctionsParser function;
    /**
     * Creates new form Biseccion
     */
    public Biseccion() {
        this.function = new MathFunctionsParser();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        cleanBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        initialValueLbl = new javax.swing.JLabel();
        xiInput = new javax.swing.JTextField();
        toleranceLbl = new javax.swing.JLabel();
        toleranceInput = new javax.swing.JTextField();
        functionLbl = new javax.swing.JLabel();
        functionInput = new javax.swing.JTextField();
        lastValueLbl = new javax.swing.JLabel();
        nitterLbl = new javax.swing.JLabel();
        xsInput = new javax.swing.JTextField();
        nInput = new javax.swing.JTextField();
        plotterBtn = new javax.swing.JButton();
        calculateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bisectionTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        observations = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLbl.setBackground(new java.awt.Color(254, 254, 254));
        titleLbl.setFont(new java.awt.Font("Lato Black", 1, 35)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(1, 1, 1));
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("BISECCIÓN");
        titleLbl.setToolTipText("");

        cleanBtn.setBackground(new java.awt.Color(0, 149, 136));
        cleanBtn.setFont(new java.awt.Font("Lato Black", 1, 15)); // NOI18N
        cleanBtn.setForeground(new java.awt.Color(1, 1, 1));
        cleanBtn.setText("LIMPIAR");

        initialValueLbl.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        initialValueLbl.setForeground(new java.awt.Color(1, 1, 1));
        initialValueLbl.setText("Intervalo inferior (xi):");

        xiInput.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        xiInput.setForeground(new java.awt.Color(1, 1, 1));
        xiInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        toleranceLbl.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        toleranceLbl.setForeground(new java.awt.Color(1, 1, 1));
        toleranceLbl.setText("Tolerancia:");

        toleranceInput.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        toleranceInput.setForeground(new java.awt.Color(1, 1, 1));

        functionLbl.setFont(new java.awt.Font("Lato Black", 1, 20)); // NOI18N
        functionLbl.setForeground(new java.awt.Color(1, 1, 1));
        functionLbl.setText("f(x) = ");

        functionInput.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        functionInput.setForeground(new java.awt.Color(1, 1, 1));

        lastValueLbl.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        lastValueLbl.setForeground(new java.awt.Color(1, 1, 1));
        lastValueLbl.setText("Intervalo superior (xs):");

        nitterLbl.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        nitterLbl.setForeground(new java.awt.Color(1, 1, 1));
        nitterLbl.setText("Máximas iteraciones (n):");

        xsInput.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        xsInput.setForeground(new java.awt.Color(1, 1, 1));

        nInput.setFont(new java.awt.Font("Lato Black", 0, 15)); // NOI18N
        nInput.setForeground(new java.awt.Color(1, 1, 1));

        plotterBtn.setBackground(new java.awt.Color(0, 149, 136));
        plotterBtn.setFont(new java.awt.Font("Lato Black", 1, 15)); // NOI18N
        plotterBtn.setForeground(new java.awt.Color(1, 1, 1));
        plotterBtn.setText("GRAFICAR");
        plotterBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        calculateBtn.setBackground(new java.awt.Color(0, 149, 136));
        calculateBtn.setFont(new java.awt.Font("Lato Black", 1, 15)); // NOI18N
        calculateBtn.setForeground(new java.awt.Color(1, 1, 1));
        calculateBtn.setText("CALCULAR");
        calculateBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        calculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(functionLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(functionInput))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(toleranceLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(toleranceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(initialValueLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(xiInput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lastValueLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(xsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(nitterLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nInput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(plotterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calculateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xiInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialValueLbl)
                    .addComponent(lastValueLbl)
                    .addComponent(xsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toleranceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toleranceLbl)
                    .addComponent(nitterLbl)
                    .addComponent(nInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(functionLbl)
                    .addComponent(functionInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plotterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        bisectionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "n", "xi", "xs", "xm", "f(xm)", "Error"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bisectionTable.setColumnSelectionAllowed(true);
        bisectionTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(bisectionTable);
        bisectionTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        backBtn.setBackground(new java.awt.Color(26, 118, 210));
        backBtn.setFont(new java.awt.Font("Lato Black", 1, 15)); // NOI18N
        backBtn.setForeground(new java.awt.Color(1, 1, 1));
        backBtn.setText("ATRAS");
        backBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        observations.setEditable(false);
        observations.setText("OBSERVACIONES:");
        observations.setToolTipText("");
        jScrollPane3.setViewportView(observations);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(cleanBtn)
                                .addGap(0, 651, Short.MAX_VALUE)))
                        .addGap(8, 8, 8)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLbl)
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(cleanBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    
    private boolean validateForm () {
        String functionInputText = this.functionInput.getText();
        try {
            this._xi = Double.parseDouble(this.xiInput.getText());
            this._xs = Double.parseDouble(this.xsInput.getText());
            this._tolerance = Double.parseDouble(this.toleranceInput.getText());
            this._n = Integer.parseInt(this.nInput.getText());
            function.parserFunction(functionInputText);
        } catch (Exception e) {
            this.observations.setForeground(Color.red);
            this.observations.setText("Error: Por favor verifica que los campos no estén vacíos y tengan valores correctos");
            return false;
        }
        this.observations.setForeground(Color.black);
        this.observations.setText("OBSERVACIONES:");
        return true;
    }
    
    private double f(double x) {
        this.function.function.addVariable("x", x);
        return function.function.getValue();
    }
    
    private void fillTable (int n, double xi, double xs, double xm, double ym, double err) {
        DefaultTableModel bisectionTableModel = (DefaultTableModel) bisectionTable.getModel();
        Object[] row = new Object[6];
        row[0] = n;
        row[1] = xi;
        row[2] = xs;
        row[3] = xm;
        row[4] = ym;
        row[5] = err;
        bisectionTableModel.addRow(row);
    }
    
    private void bisectionMethod(double xi, double xs, double tolerance, int n){
    double yi = f(xi);
    double ys = f(xs);
    if(yi == 0) {
        System.out.println(xi + " is root");
    } else if(ys == 0){
        System.out.println(xs + " is root");
    } else if (yi * ys > 0) {
        System.out.println("Incorrect interval");
    } else if (n <= 0) {
        System.out.println("Iterations should be positives");
    } else if (tolerance < 0) {
        System.out.println("Tolerance should be greater or equal to cero");
    } else {
      double xm = (xi + xs) / 2;
      double ym = f(xm);
      int count = 1;
      double error = tolerance + 1;
      fillTable(0, xi, xs, xm, ym, error);
      while (ym != 0 && error > tolerance && count < n) {
        if (yi * ym < 0) {
          xs = xm;
        } else {
          xi = xm;
          yi = ym;
        }
        double lastXm = xm;
        xm = (xi + xs) / 2;
        ym = f(xm);
        error = Math.abs(xm - lastXm);
        count++;
        fillTable(count, xi, xs, xm, ym, error);
      }
      if(ym == 0) {
          System.out.println(xm + " is root");
      } else if(error < tolerance){
          System.out.println(xm + " is close to root due to tolerance");
      } else {
          System.out.println("Failed in " + count + " iterations");
      }
    }
  }
    
    private void calculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBtnActionPerformed
        if(this.validateForm()){
            bisectionMethod(_xi, _xs, _tolerance, _n);
        }
    }//GEN-LAST:event_calculateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Biseccion().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTable bisectionTable;
    private javax.swing.JButton calculateBtn;
    private javax.swing.JButton cleanBtn;
    private javax.swing.JTextField functionInput;
    private javax.swing.JLabel functionLbl;
    private javax.swing.JLabel initialValueLbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lastValueLbl;
    private javax.swing.JTextField nInput;
    private javax.swing.JLabel nitterLbl;
    private javax.swing.JTextPane observations;
    private javax.swing.JButton plotterBtn;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JTextField toleranceInput;
    private javax.swing.JLabel toleranceLbl;
    private javax.swing.JTextField xiInput;
    private javax.swing.JTextField xsInput;
    // End of variables declaration//GEN-END:variables
}
